@layout SessionLayout﻿
@page "/"

@inject HttpClient httpClient
@using CodeChallenge.Client.Infrastructure
@using CodeChallenge.Domain.Entities.Users;
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager nav

<RadzenStack AlignItems="AlignItems.Center">
<RadzenTemplateForm TItem="UserLoginDto" Data=@userLogin Submit=@IniciarSesión>
    <RadzenContent>
        <RadzenCard>
            <RadzenStack AlignItems="AlignItems.Center">
            <RadzenText TextStyle="TextStyle.DisplayH2">Iniciar sesión</RadzenText>
                <RadzenTextBox @bind-Value="userLogin.Email" Name="Email" Placeholder="Correo Electrónico" />
            <RadzenRequiredValidator Component="Email" Text="Escriba un correo válido" Popup=false/>
                <RadzenPassword @bind-Value="userLogin.Password" Name="Password" Placeholder="Contraseña" />
        <RadzenRequiredValidator Component="Password" Text="La contraseña es requerida" Popup=false />
                    <RadzenText class="rz-message rz-messages-error" TextStyle="TextStyle.Body1">@alert</RadzenText>
            <RadzenButton Text="Iniciar sesión" ButtonType="ButtonType.Submit" />
            </RadzenStack>
        </RadzenCard>
    </RadzenContent>
    </RadzenTemplateForm>
</RadzenStack>


@code{
    protected UserLoginDto userLogin = new UserLoginDto();
    protected string alert { get; set; } = string.Empty;
    private async Task IniciarSesión()
    {
        if (!string.IsNullOrEmpty(userLogin.Password) && userLogin.Password != null)
        {
            var loginResponse = await httpClient.PostAsJsonAsync<UserLoginDto>("/api/users/login", userLogin);
            var sesionUsuario = await loginResponse.Content.ReadFromJsonAsync<User>();

            if (sesionUsuario!= null)
            {
                var autenticacionExt = (Autentication)autenticacionProvider;
                await autenticacionExt.UpdateAutenticacionState(sesionUsuario);

                nav.NavigateTo("/Index");
            }
            else
            {
                alert = "Usuario o contraseña inválida";
            }
        }
    }
}



